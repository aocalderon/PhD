\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{c+cm}{/******************************************************************************}
\PYGdefault{c+cm}{ *cr}
\PYGdefault{c+cm}{ *cr            (C) Copyright 2010 The Board of Trustees of the}
\PYGdefault{c+cm}{ *cr                        University of Illinois}
\PYGdefault{c+cm}{ *cr                         All Rights Reserved}
\PYGdefault{c+cm}{ *cr}
\PYGdefault{c+cm}{ ******************************************************************************/}

\PYGdefault{c+cp}{\PYGdefaultZsh{}define BLOCK\PYGdefaultZus{}SIZE 512}

\PYGdefault{n}{\PYGdefaultZus{}\PYGdefaultZus{}global\PYGdefaultZus{}\PYGdefaultZus{}} \PYGdefault{k+kt}{void} \PYGdefault{n+nf}{reduction}\PYGdefault{p}{(}\PYGdefault{k+kt}{float} \PYGdefault{o}{*}\PYGdefault{n}{out}\PYGdefault{p}{,} \PYGdefault{k+kt}{float} \PYGdefault{o}{*}\PYGdefault{n}{in}\PYGdefault{p}{,} \PYGdefault{k+kt}{unsigned} \PYGdefault{n}{size}\PYGdefault{p}{)}
\PYGdefault{p}{\PYGdefaultZob{}}
    \PYGdefault{c+cm}{/********************************************************************}
\PYGdefault{c+cm}{    Load a segment of the input vector into shared memory}
\PYGdefault{c+cm}{    Traverse the reduction tree}
\PYGdefault{c+cm}{    Write the computed sum to the output vector at the correct index}
\PYGdefault{c+cm}{    ********************************************************************/}

	\PYGdefault{c+c1}{// Declare an array for share memory...}
	\PYGdefault{n}{\PYGdefaultZus{}\PYGdefaultZus{}shared\PYGdefaultZus{}\PYGdefaultZus{}} \PYGdefault{k+kt}{float} \PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{2} \PYGdefault{o}{*} \PYGdefault{n}{BLOCK\PYGdefaultZus{}SIZE}\PYGdefault{p}{];}
	
	\PYGdefault{c+c1}{// Initialize some variables to access data...}
	\PYGdefault{k+kt}{unsigned} \PYGdefault{k+kt}{int} \PYGdefault{n}{t} \PYGdefault{o}{=} \PYGdefault{n}{threadIdx}\PYGdefault{p}{.}\PYGdefault{n}{x}\PYGdefault{p}{;}
	\PYGdefault{k+kt}{unsigned} \PYGdefault{k+kt}{int} \PYGdefault{n}{start} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{2} \PYGdefault{o}{*} \PYGdefault{n}{blockIdx}\PYGdefault{p}{.}\PYGdefault{n}{x} \PYGdefault{o}{*} \PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x}\PYGdefault{p}{;}

	\PYGdefault{c+c1}{// Validation to avoid load data outside of the input array...}
	\PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{start} \PYGdefault{o}{+} \PYGdefault{n}{t} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{size}\PYGdefault{p}{)}
		\PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{t}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{n}{in}\PYGdefault{p}{[}\PYGdefault{n}{start} \PYGdefault{o}{+} \PYGdefault{n}{t}\PYGdefault{p}{];}
	\PYGdefault{k}{else}
		\PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{t}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{l+m+mf}{0.0f}\PYGdefault{p}{;}
	
	\PYGdefault{c+c1}{// Same validation for the other position...}
	\PYGdefault{k}{if}\PYGdefault{p}{(}\PYGdefault{n}{start} \PYGdefault{o}{+} \PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x} \PYGdefault{o}{+} \PYGdefault{n}{t} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{size}\PYGdefault{p}{)}
		\PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x} \PYGdefault{o}{+} \PYGdefault{n}{t}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{n}{in}\PYGdefault{p}{[}\PYGdefault{n}{start} \PYGdefault{o}{+} \PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x} \PYGdefault{o}{+} \PYGdefault{n}{t}\PYGdefault{p}{];}
	\PYGdefault{k}{else}
		\PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x} \PYGdefault{o}{+} \PYGdefault{n}{t}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{l+m+mf}{0.0f}\PYGdefault{p}{;}

	\PYGdefault{c+c1}{// Iterate through share memory to compute the sum...}
	\PYGdefault{k}{for} \PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{stride} \PYGdefault{o}{=} \PYGdefault{n}{blockDim}\PYGdefault{p}{.}\PYGdefault{n}{x}\PYGdefault{p}{;} \PYGdefault{n}{stride} \PYGdefault{o}{\PYGdefaultZgt{}} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{stride} \PYGdefault{o}{/=} \PYGdefault{l+m+mi}{2}\PYGdefault{p}{)\PYGdefaultZob{}}
		\PYGdefault{n}{\PYGdefaultZus{}\PYGdefaultZus{}syncthreads}\PYGdefault{p}{();}  \PYGdefault{c+c1}{// Synchronize the share memory load and each iteration...}
		\PYGdefault{k}{if} \PYGdefault{p}{(}\PYGdefault{n}{t} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{stride}\PYGdefault{p}{)}
			\PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{t}\PYGdefault{p}{]} \PYGdefault{o}{+=} \PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{n}{t} \PYGdefault{o}{+} \PYGdefault{n}{stride}\PYGdefault{p}{];}
	\PYGdefault{p}{\PYGdefaultZcb{}} 
	\PYGdefault{c+c1}{// Do not forget to synchronize last iteration...}
	\PYGdefault{n}{\PYGdefaultZus{}\PYGdefaultZus{}syncthreads}\PYGdefault{p}{();}

	\PYGdefault{c+c1}{// Copy back the result...}
	\PYGdefault{n}{out}\PYGdefault{p}{[}\PYGdefault{n}{blockIdx}\PYGdefault{p}{.}\PYGdefault{n}{x}\PYGdefault{p}{]} \PYGdefault{o}{=} \PYGdefault{n}{partialSum}\PYGdefault{p}{[}\PYGdefault{l+m+mi}{0}\PYGdefault{p}{];}
\PYGdefault{p}{\PYGdefaultZcb{}}
\end{Verbatim}
