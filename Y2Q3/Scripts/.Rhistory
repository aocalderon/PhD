as.data.frame(t(strsplit(r, ",")[[1]]))
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
coordinates(p) = ~V2+V3
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p$V2 <- as.numeric(p$V2)
p$V3 <- as.numeric(p$V3)
coordinates(p) = ~V2+V3
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p
p$V2 <- as.numeric(p$V2)
p
as.double("40.25")
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V2+V3
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p$V2 <- as.double(p$V2)
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p$lng <- as.double(p$V2)
p$lat <- as.double(p$V3)
coordinates(p) = ~lng+lat
p
p = as.data.frame(t(strsplit(r, ",")[[1]]))
p$lng <- as.double(p$V2)
p
class(p$V2)
?as.data.frame
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$lng <- as.double(p$V2)
p$lat <- as.double(p$V3)
coordinates(p) = ~lng+lat
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~lng+lat
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V2+V3
p
data(meuse)
meuse.xy = meuse[c("x", "y")]
View(meuse.xy)
class(meuse)
class(meuse.xy)
coordinates(meuse.xy) <- ~x+y
class(meuse.xy)
p
class(p)
proj4string(p) = CRS("+proj=longlat +datum=WGS84")
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = CRS("+proj=longlat +datum=WGS84")
p
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
wgs84 = CRS("+init=epsg:4326")
mercator = CRS("+init=epsg:3857")
proj4string(p) = wgs84
p
p2 = spTransform(p, mercator)
p2
r = "898,40.3586583,116.5952766"
p = as.data.frame(t(strsplit(r, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = wgs84
p = spTransform(p, mercator)
p
p$coords
p$coordinates
p@coords
cbind(p$V1,p@coords)
c(p$V1,p@coords)
len(c(p$V1,p@coords))
length(c(p$V1,p@coords))
transformCoords <- function(line){
p = as.data.frame(t(strsplit(line, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = wgs84
p = spTransform(p, mercator)
return(c(p$V1,p@coords))
}
r = "898,40.3586583,116.5952766"
print(transformCoords(r))
dataRDD = SparkR:::textFile(sc,"/home/and/notebooks/sample_small.csv")
dataRDD_splitted = SparkR:::map(dataRDD, transformCoords)
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/transformCoords.R')
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/transformCoords.R')
head(dataRDD)
dataRDD_splitted
sdf <- createDataFrame(sqlContext, dataRDD_splitted)
head(sdf)
?as.double
?as.numeric
as.numeric(c("-.1"," 2.7 ","B"))
as.numeric(c("-.1","2.7154613","B"))
as.double(c("-.1","2.7154613","B"))
r
transformCoords(r)
transformCoords <- function(line){
library(sp)
p = as.data.frame(t(strsplit(line, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = wgs84
p = spTransform(p, mercator)
return(as.double(c(p$V1,p@coords)))
}
r = "898,40.3586583,116.5952766"
transformCoords(r)
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/transformCoords.R')
r = "898,40.3586583,116.5952766"
transformCoords(r)
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/transformCoords.R')
r = "898,40.3586583,116.5952766"
transformCoords(r)
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/transformCoords.R')
r = "898,40.3586583,116.5952766"
transformCoords(r)
rr = transformCoords(r)
rr
rr[1]
as.integer(rr[1])
as.double(rr[2])
as.numeric(rr[2])
class(rr[2])
options(digits=15)
as.numeric(rr[2])
source('~/.active-rstudio-document')
head(points)
nrow(points)
p = c(2,3,6)
p
poinst[points$ID == p,]
points[points$ID == p,]
points[p,]
source('~/.active-rstudio-document')
?rect
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(NA)
rect(c(3,4),c(1,0),c(5,9),c(6,5))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
source('~/.active-rstudio-document')
data
data[1]
data[1,1]
class(data[1,1])
data = read.table('/home/and/notebooks/sample_small.csv', header = F)
data = read.table('/home/and/notebooks/sample_small.csv', header = F, stringsAsFactors = F)
data[1,1]
class(data[1,1])
lapply(data, transformCoords)
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
lapply(data, transformCoords)
data
lapply(data, transformCoords)
lapply(data, 1, transformCoords)
lapply(data, 2, transformCoords)
tapply(data, 2, transformCoords)
tapply(data, 1, transformCoords)
tapply(data, transformCoords)
mapply(data, transformCoords)
apply(data, 1, transformCoords)
mapply(data, 1, transformCoords)
apply(t(data), 1, transformCoords)
apply(t(data), 2, transformCoords)
t(apply(data, 1, transformCoords))
write.csv(lapply(data, transformCoords), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
write.csv(t(lapply(data, transformCoords)), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
t(apply(data, 1, transformCoords))
write.csv(t(apply(data, 1, transformCoords)), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
write.csv(t(apply(data, 1, transformCoords)), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, header = F)
?writer.csv
?write.csv
write.csv(t(apply(data, 1, transformCoords)), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
class(t(apply(data, 1, transformCoords)))
class(as.data.frame(t(apply(data, 1, transformCoords))))
class(data)
class(t(data))
write.csv(apply(t(data), 1, transformCoords)), '/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
write.csv(as.data.frame(t(apply(data, 1, transformCoords))),
'/home/and/notebooks/sample_small_EPGS-4799.csv',row.names = F, col.names = F)
write.csv(as.data.frame(t(apply(data, 1, transformCoords))),
'/home/and/notebooks/sample_small_EPGS-4799.csv', row.names = F, col.names = F)
write.table(as.data.frame(t(apply(data, 1, transformCoords))),
'/home/and/notebooks/sample_small_EPGS-4799.csv', sep = ',', row.names = F, col.names = F)
install.packages(c("colorspace", "ggplot2", "htmlwidgets", "knitr", "plotly", "rgdal", "scales"))
install.packages(c("colorspace", "ggplot2", "htmlwidgets", "knitr",
)
).
install.packages(c("colorspace", "ggplot2", "htmlwidgets", "knitr", "plotly", "rgdal", "scales"))
data = read.table('/home/and/notebooks/sample_small.csv', header = F)
data[1,1]
line = "0,39.537542,116.694663"
p = as.data.frame(t(strsplit(line, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
library(sp)
p = as.data.frame(t(strsplit(line, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = wgs84
p = spTransform(p, mercator)
p
line = "0,39.990010,116.317406"
p = as.data.frame(t(strsplit(line, ",")[[1]]),stringsAsFactors=F)
p$V2 <- as.double(p$V2)
p$V3 <- as.double(p$V3)
coordinates(p) = ~V3+V2
proj4string(p) = wgs84
p = spTransform(p, mercator)
p
line
install.packages("yaml")
source('~/Documents/PhD/Code/Y2Q1/SDB/Project/Code/Leaflet_example.R')
map
library(SparkR)
# sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sc <- sparkR.init("local[4]", "SparkR", sparkPackages="com.databricks:spark-csv_2.10:1.5.0")
library(SparkR)
# sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sc <- sparkR.init("local[4]", "SparkR", sparkPackages="com.databricks:spark-csv_2.10:1.5.0")
library(SparkR)
# sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
sc <- sparkR.init("local[4]", "SparkR", sparkPackages="com.databricks:spark-csv_2.10:1.5.0")
sqlContext <- sparkRSQL.init(sc)
schema <- structType(structField("tag", "string"), structField("x", "double"), structField("y", "double"))
points <- read.df(sqlContext, "/home/and/Documents/PhD/Code/Y2Q1/SDB/Project/Code/points.txt", source = "com.databricks.spark.csv", schema = schema)
# points = as.DataFrame(sqlContext = sqlContext, data=points)
registerTempTable(points, "points")
sql = "SELECT * FROM points WHERE POINT(x, y) IN CIRCLERANGE(POINT(4.5, 4.5), 2)"
print(collect(sql(sqlContext,sql)))
capabilities()
q()
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, data.table)
filename = 'Beijing_N10K-50K_E10.0-50.0_1496421767449.csv'
data = mydat <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
names(data) = c('Epsilon', 'Dataset', 'Time', 'Implementation')
temp_title = paste("(radius of disk in mts) in Beijing dataset.")
title = substitute(paste("Execution time by ",epsilon) ~temp_title, list(temp_title = temp_title))
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, data.table)
filename = 'Beijing_N10K-50K_E10.0-50.0_1496421767449.csv'
data = mydat <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
filename = 'Beijing_N10K-50K_E10.0-50.0_1496421767449.csv'
data <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
filename = 'Beijing_N10K-50K_E10.0-50.0_1496421767449.csv'
data <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
View(data)
names(data) = c('Epsilon', 'Dataset', 'Time', 'Implementation')
temp_title = paste("(radius of disk in mts) in Beijing dataset.")
title = substitute(paste("Execution time by ",epsilon) ~temp_title, list(temp_title = temp_title))
g = ggplot(data=data, aes(x=factor(Dataset), y=Time, group=Implementation, colour=Implementation, shape=Implementation)) +
geom_line(aes(linetype=Implementation)) +
geom_point(size=2) +
labs(title=title,y="Time (sec)") +
## scale_x_discrete("Number of points", breaks = paste0(seq(20,100,20),"K")) +
scale_x_discrete("Number of points") +
theme(axis.text.x=element_text(size=8, angle=90),axis.text.y=element_text(size=8)) +
facet_wrap(~Epsilon) +
scale_colour_discrete() +
scale_shape_discrete() +
scale_linetype_discrete()
pdf(paste0(filename, ".pdf"), width = 10.5, height = 7.5)
plot(g)
dev.off()
setwd("~/Documents/PhD/Code/Y2Q3/Scripts")
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotBenchmarks.R')
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotBenchmarks.R')
filename
strsplit(filename, '.')
filename
strsplit(filename, '\.')
strsplit(filename, '\\.')
strsplit(filename, '\\.')[1:-1]
strsplit(filename, '\\.')[1:3]
strsplit(filename, '\\.')[[1]][1:3]
strsplit(filename, '\\.')[[1]][1:4]
length(strsplit(filename, '\\.'))
length(strsplit(filename, '\\.')[[1]])
length(strsplit(filename, '\\.')[[1]]) - 1
strsplit(filename, '\\.')[[1]][1:length(strsplit(filename, '\\.')[[1]]) - 1]
paste0(strsplit(filename, '\\.')[[1]][1:length(strsplit(filename, '\\.')[[1]]) - 1], collapse = '.')
if (!require("pacman")) install.packages("pacman")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, data.table)
args = commandArgs(trailingOnly=TRUE)
filename = args[1]
filename = "Beijing_N60K-100K_E30.0-50.0_1496879439.csv"
data <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
names(data) = c('Epsilon', 'Dataset', 'Time', 'Implementation')
temp_title = paste("(radius of disk in mts) in Beijing dataset.")
title = substitute(paste("Execution time by ",epsilon) ~temp_title, list(temp_title = temp_title))
paste0(seq(20,100,20),"K")
data
g = ggplot(data=data, aes(x=factor(Dataset), y=Time, group=Implementation, colour=Implementation, shape=Implementation)) +
geom_line(aes(linetype=Implementation)) +
geom_point(size=2) +
labs(title=title,y="Time (sec)") +
scale_x_discrete("Number of points", breaks = paste0(seq(20,100,20),"K")) +
## scale_x_discrete("Number of points") +
theme(axis.text.x=element_text(size=8, angle=90),axis.text.y=element_text(size=8)) +
facet_wrap(~Epsilon) +
scale_colour_discrete() +
scale_shape_discrete() +
scale_linetype_discrete()
filename = paste0(strsplit(filename, '\\.')[[1]][1:length(strsplit(filename, '\\.')[[1]]) - 1], collapse = '.')
plot(g)
data <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
filename = "Beijing_N60K-100K_E30.0-50.0_1496879439.csv"
data <- fread(paste0('http://www.cs.ucr.edu/~acald013/public/Results/', filename))
data = data[, c(2, 3, 5, 1)]
names(data) = c('Epsilon', 'Dataset', 'Time', 'Implementation')
data$Dataset <- factor(data$Dataset, levels = paste0(seq(10,100,10),"K"))
data
summary(data$Dataset)
temp_title = paste("(radius of disk in mts) in Beijing dataset.")
title = substitute(paste("Execution time by ",epsilon) ~temp_title, list(temp_title = temp_title))
g = ggplot(data=data, aes(x=factor(Dataset), y=Time, group=Implementation, colour=Implementation, shape=Implementation)) +
geom_line(aes(linetype=Implementation)) +
geom_point(size=2) +
labs(title=title,y="Time (sec)") +
scale_x_discrete("Number of points", breaks = paste0(seq(20,100,20),"K")) +
## scale_x_discrete("Number of points") +
theme(axis.text.x=element_text(size=8, angle=90),axis.text.y=element_text(size=8)) +
facet_wrap(~Epsilon) +
scale_colour_discrete() +
scale_shape_discrete() +
scale_linetype_discrete()
plot(g)
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1$Nodes = "1"
View(data1)
core1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
core1 = core1[, c(2, 3, 5, 1)]
names(core1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1$Nodes = "1"
data1$ScaleUp = data1$Time / core1$Time
data2 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE2.csv")
data2 = data1[, c(2, 3, 5, 1)]
names(data2) = c("Epsilon", "Dataset", "Time", "Nodes")
data2$Nodes = "2"
data2$ScaleUp = data2$Time / core1$Time
data3 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE3.csv")
data3 = data1[, c(2, 3, 5, 1)]
names(data3) = c("Epsilon", "Dataset", "Time", "Nodes")
data3$Nodes = "3"
data3$ScaleUp = data3$Time / core1$Time
View(data1)
View(data2)
View(data3)
core1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
core1 = core1[, c(2, 3, 5, 1)]
names(core1) = c("Epsilon", "Dataset", "Time", "Nodes")
View(core1)
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
View(data1)
data1$Nodes = "1"
data1$ScaleUp = data1$Time / core1$Time
data2 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE2.csv")
data2 = data2[, c(2, 3, 5, 1)]
names(data2) = c("Epsilon", "Dataset", "Time", "Nodes")
data2$Nodes = "2"
data2$ScaleUp = data2$Time / core1$Time
data3 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE3.csv")
data3 = data3[, c(2, 3, 5, 1)]
names(data3) = c("Epsilon", "Dataset", "Time", "Nodes")
data3$Nodes = "3"
data3$ScaleUp = data3$Time / core1$Time
data = rbind(data1, data2, data3)
View(data)
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
filename ="Beijing_N10K-100K_E5.0-50.0"
core1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_LOCAL.csv")
core1 = core1[, c(2, 3, 5, 1)]
names(core1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv")
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1$Nodes = "1"
data1$Scaleup = core1$Time / data1$Time
data2 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE2.csv")
data2 = data2[, c(2, 3, 5, 1)]
names(data2) = c("Epsilon", "Dataset", "Time", "Nodes")
data2$Nodes = "2"
data2$Scaleup = core1$Time / data2$Time
data3 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE3.csv")
data3 = data3[, c(2, 3, 5, 1)]
names(data3) = c("Epsilon", "Dataset", "Time", "Nodes")
data3$Nodes = "3"
data3$Scaleup = core1$Time / data3$Time
data = rbind(data1, data2, data3)
data$Dataset = factor(data$Dataset, levels = paste0(seq(10, 100, 10), "K"))
View(data)
filename ="Beijing_N10K-100K_E5.0-50.0"
core1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_LOCAL.csv", header = F)
core1 = core1[, c(2, 3, 5, 1)]
names(core1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv", header = F)
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1$Nodes = "1"
data1$Scaleup = core1$Time / data1$Time
data2 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE2.csv", header = F)
data2 = data2[, c(2, 3, 5, 1)]
names(data2) = c("Epsilon", "Dataset", "Time", "Nodes")
data2$Nodes = "2"
data2$Scaleup = core1$Time / data2$Time
data3 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE3.csv", header = F)
data3 = data3[, c(2, 3, 5, 1)]
names(data3) = c("Epsilon", "Dataset", "Time", "Nodes")
data3$Nodes = "3"
data3$Scaleup = core1$Time / data3$Time
core1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_LOCAL.csv", header = F)
core1 = core1[, c(2, 3, 5, 1)]
names(core1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE1.csv", header = F)
data1 = data1[, c(2, 3, 5, 1)]
names(data1) = c("Epsilon", "Dataset", "Time", "Nodes")
data1$Nodes = "1"
data1$Scaleup = core1$Time / data1$Time
data2 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE2.csv", header = F)
data2 = data2[, c(2, 3, 5, 1)]
names(data2) = c("Epsilon", "Dataset", "Time", "Nodes")
data2$Nodes = "2"
data2$Scaleup = core1$Time / data2$Time
data3 = read.csv("Results/Beijing_N10K-100K_E5.0-50.0_NODE3.csv", header = F)
data3 = data3[, c(2, 3, 5, 1)]
names(data3) = c("Epsilon", "Dataset", "Time", "Nodes")
data3$Nodes = "3"
data3$Scaleup = core1$Time / data3$Time
View(core1)
View(data3)
data = rbind(data1, data2, data3)
data$Dataset = factor(data$Dataset, levels = paste0(seq(10, 100, 10), "K"))
data = data[data$Epsilon > 5 && data$Epsilon < 50, ]
data$Epsilon > 5 && data$Epsilon < 50
data$Epsilon > 5
data$Epsilon
data = rbind(data1, data2, data3)
data$Dataset = factor(data$Dataset, levels = paste0(seq(10, 100, 10), "K"))
data = data[data$Epsilon > 5 && data$Epsilon < 50, ]
data = rbind(data1, data2, data3)
data$Dataset = factor(data$Dataset, levels = paste0(seq(10, 100, 10), "K"))
data$Epsilon
data$Epsilon > 5
data$Epsilon < 50
data$Epsilon < 50 && data$Epsilon > 5
data$Epsilon < 50 & data$Epsilon > 5
data = data[data$Epsilon > 5 & data$Epsilon < 50, ]
source('~/Documents/PhD/Code/Y2Q3/Scripts/plotScaleUp.R')
?write.table
