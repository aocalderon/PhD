sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 70.7465
Branch Predictor Power Consumption: 4.52313  (6.58%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.608%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (3.21%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.4%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (5.2%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.34%)
Total Clock Power: 26.0975  (38%)
Int ALU Power: 4.66013  (6.78%)
FP ALU Power: 14.281  (20.8%)
Instruction Cache Power Consumption: 2.21363  (3.22%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.383%)
Data Cache Power Consumption: 5.18303  (7.54%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.31%)
Level 2 Cache Power Consumption: 1.16735 (1.7%)
 decode_power (W): 0.090611
 wordline_power (W): 0.0225599
 bitline_power (W): 0.573457
 senseamp_power (W): 0.096
 tagarray_power (W): 0.38472
warning: section `.comment' ignored...
sim: command line: ./sim-outorder -cache:dl2 ul2:128:32:8:l ../benchmarks/anagram.alpha ../benchmarks/words 

sim: simulation started @ Fri Apr 15 17:27:10 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:128:32:8:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
warning: partially supported sigprocmask() call...

sim: ** simulation statistics **
sim_num_insn               25729108 # total number of instructions committed
sim_num_refs                9061672 # total number of loads and stores committed
sim_num_loads               6510002 # total number of loads committed
sim_num_stores         2551670.0000 # total number of stores committed
sim_num_branches            3809455 # total number of branches committed
sim_elapsed_time                 21 # total simulation time in seconds
sim_inst_rate          1225195.6190 # simulation speed (in insts/sec)
sim_total_insn             27151075 # total number of instructions executed
sim_total_refs              9506952 # total number of loads and stores executed
sim_total_loads             6816039 # total number of loads executed
sim_total_stores       2690913.0000 # total number of stores executed
sim_total_branches          4040212 # total number of branches executed
sim_cycle                  12161170 # total simulation time in cycles
sim_IPC                      2.1157 # instructions per cycle
sim_CPI                      0.4727 # cycles per instruction
sim_exec_BW                  2.2326 # total instructions (mis-spec + committed) per cycle
sim_IPB                      6.7540 # instruction per branch
IFQ_count                  43434015 # cumulative IFQ occupancy
IFQ_fcount                  9842527 # cumulative IFQ full count
ifq_occupancy                3.5715 # avg IFQ occupancy (insn's)
ifq_rate                     2.2326 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5997 # avg IFQ occupant latency (cycle's)
ifq_full                     0.8093 # fraction of time (cycle's) IFQ was full
RUU_count                 166949682 # cumulative RUU occupancy
RUU_fcount                  7284476 # cumulative RUU full count
ruu_occupancy               13.7281 # avg RUU occupancy (insn's)
ruu_rate                     2.2326 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  6.1489 # avg RUU occupant latency (cycle's)
ruu_full                     0.5990 # fraction of time (cycle's) RUU was full
LSQ_count                  56291725 # cumulative LSQ occupancy
LSQ_fcount                  1238285 # cumulative LSQ full count
lsq_occupancy                4.6288 # avg LSQ occupancy (insn's)
lsq_rate                     2.2326 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.0733 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1018 # fraction of time (cycle's) LSQ was full
sim_slip                  253422042 # total number of slip cycles
avg_sim_slip                 9.8496 # the average slip between issue and retirement
bpred_bimod.lookups         4137670 # total number of bpred lookups
bpred_bimod.updates         3809455 # total number of updates
bpred_bimod.addr_hits       3660275 # total number of address-predicted hits
bpred_bimod.dir_hits        3660840 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses           148615 # total number of misses
bpred_bimod.jr_hits          329020 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen          329260 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP         6286 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP         6328 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9608 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9610 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9993 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.9934 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes       341573 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops       325232 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP       322932 # total number of RAS predictions used
bpred_bimod.ras_hits.PP       322734 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9994 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses               27702008 # total number of accesses
il1.hits                   27679191 # total number of hits
il1.misses                    22817 # total number of misses
il1.replacements              22342 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0008 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0008 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                9095668 # total number of accesses
dl1.hits                    9053194 # total number of hits
dl1.misses                    42474 # total number of misses
dl1.replacements              41962 # total number of replacements
dl1.writebacks                10544 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0047 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0046 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0012 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                  75835 # total number of accesses
ul2.hits                      39684 # total number of hits
ul2.misses                    36151 # total number of misses
ul2.replacements              35127 # total number of replacements
ul2.writebacks                 9261 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.4767 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.4632 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.1221 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              27702008 # total number of accesses
itlb.hits                  27701988 # total number of hits
itlb.misses                      20 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses               9130361 # total number of accesses
dtlb.hits                   9130278 # total number of hits
dtlb.misses                      83 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           5082949.3382 # total power usage of rename unit
bpred_power            55006509.0256 # total power usage of bpred unit
window_power           26807103.1815 # total power usage of instruction window
lsq_power              11713395.5677 # total power usage of load/store queue
regfile_power          43445440.5920 # total power usage of arch. regfile
icache_power           30122509.5260 # total power usage of icache
dcache_power           73999579.6056 # total power usage of dcache
dcache2_power          14196314.4102 # total power usage of dcache2
alu_power              230346854.0543 # total power usage of alu
falu_power             173674215.3969 # total power usage of falu
resultbus_power        27940809.6380 # total power usage of resultbus
clock_power            317375801.1920 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            1.1673 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0975 # avg power usage of clock
fetch_stage_power      85129018.5516 # total power usage of fetch stage
dispatch_stage_power   5082949.3382 # total power usage of dispatch stage
issue_stage_power      385004056.4573 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             31.6585 # average power of issue unit per cycle
total_power            836037266.1311 # total power per cycle
avg_total_power_cycle       68.7465 # average total power per cycle
avg_total_power_cycle_nofp_nod2      53.2981 # average total power per cycle
avg_total_power_insn        30.7921 # average total power per insn
avg_total_power_insn_nofp_nod2      23.8726 # average total power per insn
rename_power_cc1       4099787.5144 # total power usage of rename unit_cc1
bpred_power_cc1        15750656.8918 # total power usage of bpred unit_cc1
window_power_cc1       23325094.0297 # total power usage of instruction window_cc1
lsq_power_cc1          3453981.5431 # total power usage of lsq_cc1
regfile_power_cc1      31273904.8571 # total power usage of arch. regfile_cc1
icache_power_cc1       24910672.3907 # total power usage of icache_cc1
dcache_power_cc1       37459026.8102 # total power usage of dcache_cc1
dcache2_power_cc1        75719.4280 # total power usage of dcache2_cc1
alu_power_cc1          67989868.0329 # total power usage of alu_cc1
resultbus_power_cc1    20063431.8126 # total power usage of resultbus_cc1
clock_power_cc1        150720599.2266 # total power usage of clock_cc1
avg_rename_power_cc1         0.3371 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          1.2952 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.9180 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.2840 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.5716 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         2.0484 # avg power usage of icache_cc1
avg_dcache_power_cc1         3.0802 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0062 # avg power usage of dcache2_cc1
avg_alu_power_cc1            5.5907 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.6498 # avg power usage of resultbus_cc1
avg_clock_power_cc1         12.3936 # avg power usage of clock_cc1
fetch_stage_power_cc1  40661329.2826 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 4099787.5144 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  152367121.6564 # total power usage of issue stage_cc1
avg_fetch_power_cc1          3.3435 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3371 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         12.5290 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  379122742.5371 # total power per cycle_cc1
avg_total_power_cycle_cc1      31.1749 # average total power per cycle_cc1
avg_total_power_insn_cc1      13.9635 # average total power per insn_cc1
rename_power_cc2       2837053.0696 # total power usage of rename unit_cc2
bpred_power_cc2        8615323.2324 # total power usage of bpred unit_cc2
window_power_cc2       20691761.7772 # total power usage of instruction window_cc2
lsq_power_cc2          2283438.5606 # total power usage of lsq_cc2
regfile_power_cc2      8595441.3092 # total power usage of arch. regfile_cc2
icache_power_cc2       24910672.3907 # total power usage of icache_cc2
dcache_power_cc2       27673143.6324 # total power usage of dcache_cc2
dcache2_power_cc2        44262.9082 # total power usage of dcache2_cc2
alu_power_cc2          34105262.1916 # total power usage of alu_cc2
resultbus_power_cc2    13675800.9155 # total power usage of resultbus_cc2
clock_power_cc2        96244115.5363 # total power usage of clock_cc2
avg_rename_power_cc2         0.2333 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.7084 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.7015 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1878 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.7068 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         2.0484 # avg power usage of icache_cc2
avg_dcache_power_cc2         2.2755 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0036 # avg power usage of dcache2_cc2
avg_alu_power_cc2            2.8044 # avg power usage of alu_cc2
avg_resultbus_power_cc2       1.1245 # avg power usage of resultbus_cc2
avg_clock_power_cc2          7.9141 # avg power usage of clock_cc2
fetch_stage_power_cc2  33525995.6231 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 2837053.0696 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  98473669.9856 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.7568 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2333 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          8.0974 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  239676275.5237 # total power per cycle_cc2
avg_total_power_cycle_cc2      19.7083 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.8275 # average total power per insn_cc2
rename_power_cc3       2935369.2521 # total power usage of rename unit_cc3
bpred_power_cc3        12540918.8490 # total power usage of bpred unit_cc3
window_power_cc3       20944342.7122 # total power usage of instruction window_cc3
lsq_power_cc3          3096429.3865 # total power usage of lsq_cc3
regfile_power_cc3      9295295.3820 # total power usage of arch. regfile_cc3
icache_power_cc3       25431856.1030 # total power usage of icache_cc3
dcache_power_cc3       31517121.9202 # total power usage of dcache_cc3
dcache2_power_cc3      1456325.0330 # total power usage of dcache2_cc3
alu_power_cc3          50340960.7964 # total power usage of alu_cc3
resultbus_power_cc3    14035706.4144 # total power usage of resultbus_cc3
clock_power_cc3        112438515.3613 # total power usage of clock_cc3
avg_rename_power_cc3         0.2414 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          1.0312 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.7222 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2546 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.7643 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.0912 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.5916 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.1198 # avg power usage of dcache2_cc3
avg_alu_power_cc3            4.1395 # avg power usage of alu_cc3
avg_resultbus_power_cc3       1.1541 # avg power usage of resultbus_cc3
avg_clock_power_cc3          9.2457 # avg power usage of clock_cc3
fetch_stage_power_cc3  37972774.9520 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 2935369.2521 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  121390886.2627 # total power usage of issue stage_cc3
avg_fetch_power_cc3          3.1225 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2414 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          9.9818 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  284032841.2100 # total power per cycle_cc3
avg_total_power_cycle_cc3      23.3557 # average total power per cycle_cc3
avg_total_power_insn_cc3      10.4612 # average total power per insn_cc3
total_rename_access        27151075 # total number accesses of rename unit
total_bpred_access          3809455 # total number accesses of bpred unit
total_window_access        99535752 # total number accesses of instruction window
total_lsq_access            9169347 # total number accesses of load/store queue
total_regfile_access       33831856 # total number accesses of arch. regfile
total_icache_access        27702635 # total number accesses of icache
total_dcache_access         9095668 # total number accesses of dcache
total_dcache2_access          75835 # total number accesses of dcache2
total_alu_access           26372431 # total number accesses of alu
total_resultbus_access     29035094 # total number accesses of resultbus
avg_rename_access            2.2326 # avg number accesses of rename unit
avg_bpred_access             0.3132 # avg number accesses of bpred unit
avg_window_access            8.1847 # avg number accesses of instruction window
avg_lsq_access               0.7540 # avg number accesses of lsq
avg_regfile_access           2.7820 # avg number accesses of arch. regfile
avg_icache_access            2.2780 # avg number accesses of icache
avg_dcache_access            0.7479 # avg number accesses of dcache
avg_dcache2_access           0.0062 # avg number accesses of dcache2
avg_alu_access               2.1686 # avg number accesses of alu
avg_resultbus_access         2.3875 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                16 # max number accesses of instruction window
max_lsq_access                    5 # max number accesses of load/store queue
max_regfile_access               11 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              6 # max number accesses of resultbus
max_cycle_power_cc1         56.5932 # maximum cycle power usage of cc1
max_cycle_power_cc2         35.6360 # maximum cycle power usage of cc2
max_cycle_power_cc3         38.3831 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 106496 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                  71264 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x01200059c0 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   54 # total number of pages allocated
mem.page_mem                   432k # total size of memory pages allocated
mem.ptab_misses              456695 # total first level page table misses
mem.ptab_accesses         190728096 # total page table accesses
mem.ptab_miss_rate           0.0024 # first level page table miss rate

