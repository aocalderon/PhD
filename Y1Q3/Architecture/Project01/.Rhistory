source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
dev.off()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
<<<<<<< HEAD
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
metric = "sim_CPI"
variables = c("1", "2", "4", "8")
applications = c("cc1", "go", "anagram", "compress95")
title = "Cycles Per Instruction"
xlab = "Number of fetched instructions"
Data <- expand.grid(metric=metric,
variable=variables,
application=applications)
Data$value = 0
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_F.csv')
d = d[,1:(length(variables)+1)]
record = d[d$metric==metric,2:(length(variables)+1)]
for(i in 1:length(record)){
Data[Data$metric==metric &
Data$application=='cc1' &
Data$variable==variables[i],4]=record[i]
}
View(Data)
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_A_F.csv')
View(d)
d = d[,1:(length(variables)+1)]
View(d)
app_prefix <- '_A'
data <- readLines(paste0("Results/results",app_prefix,"_F1.txt"))
data == "sim: ** simulation statistics **"
data[data=="sim: ** simulation statistics **"]
row.names(data)[data=="sim: ** simulation statistics **"]
match("sim: ** simulation statistics **", data)
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_F.csv')
View(d)
View(d)
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_A_F.csv')
View(d)
metric = "sim_CPI"
variables = c("1", "2", "4", "8")
applications = c("cc1", "go", "anagram", "compress95")
title = "Cycles Per Instruction"
xlab = "Number of fetched instructions"
Data <- expand.grid(metric=metric,
variable=variables,
application=applications)
Data$value = 0
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_F.csv')
d = d[,1:(length(variables)+1)]
record = d[d$metric==metric,2:(length(variables)+1)]
for(i in 1:length(record)){
Data[Data$metric==metric &
Data$application=='cc1' &
Data$variable==variables[i],4]=record[i]
}
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_A_F.csv')
d = d[,1:(length(variables)+1)]
record = d[d$metric==metric,2:(length(variables)+1)]
View(record)
record
d[d$metric==metric,2:(length(variables)+1)]
d
d[complete.cases(d),]
d
d[complete.cases(d),]
d = read.csv('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/Results/metrics_A_F.csv')
d
d = d[complete.cases(d),1:(length(variables)+1)]
d
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/plotMetrics.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
warnings()
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
top <- 10
xlab <- "Number of fetched instructions"
app_prefix <- '_C'
data <- readLines(paste0("Results/results",app_prefix,"_F1.txt"))
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysFetch.R')
=======
require(ggplot2)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
dev.off()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
results
View(results)
match(results$metric, "sim_CPI")
match("sim_CPI",results$metric)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
>>>>>>> fc60321ffdb11883a841c20d0ce9159b7682a199
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
<<<<<<< HEAD
=======
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
results[match("sim_CPI",results$metric),2:5]
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
metrics = read.csv('metrics.csv')
View(metrics)
metric$desc[metric$metric=='sim_CPI']
metrics$desc[metrics$metric=='sim_CPI']
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
simpleCap(metrics$desc[metrics$metric=='sim_CPI'])
simpleCap("cycles per instruction")
simpleCap(metrics$desc[metrics$metric=='sim_CPI'][1])
class(metrics$desc[metrics$metric=='sim_CPI'])
simpleCap(as.character(metrics$desc[metrics$metric=='sim_CPI'])
)
simpleCap(as.character(metrics$desc[metrics$metric=='sim_CPI']))
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
features = read.csv('Results/metrics_F.csv')
View(features)
features$metric[1:10]
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
View(features)
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),]
go = read.csv('Results/metrics_G_F.csv')
go = cc1[complete.cases(go),]
anagram = read.csv('Results/metrics_A_F.csv')
anagram = cc1[complete.cases(anagram),]
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = cc1[complete.cases(compress95),]
?merge
merge(cc1, go, by = "metric")
View(merge(cc1, go, by = "metric"))
View(cc1)
c(1:5,11)
cc1[,c(1,-1)]
cc1[,c(1,11)]
cc1[,c(1,length(cc1))]
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = cc1[complete.cases(go),c(1,length(cc1))]
features = merge(cc1, go, by = "metric")
View(features)
anagram = read.csv('Results/metrics_A_F.csv')
anagram = cc1[complete.cases(anagram),c(1,length(cc1))]
features = merge(features, anagram, by = "metric")
View(features)
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = cc1[complete.cases(compress95),c(1,length(cc1))]
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
View(features)
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
View(features)
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
names(features) = c('metric','cc1','go')
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
names(features) = c('metric','cc1','go','anagram')
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
names(features) = c('metric','cc1','go','anagram','compress95')
View(features)
apply(features[2:5],2,sum)
apply(features[2:5],1,sum)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
getwd()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('plotMetrics.R')
metric = "sim_CPI"
variables = c("Not Taken", "Taken", "Bimodal", "2-Level")
applications = c("cc1", "go", "anagram", "compress95")
feature = "_BP"
xlab = "Branch prediction"
plotMetric(feature, metric, variables, applications, xlab)
cc1 = read.csv(paste0('Results/metrics',feature,'.csv'))
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv(paste0('Results/metrics_G',feature,'.csv'))
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
names(features) = c('metric','cc1','go')
anagram = read.csv(paste0('Results/metrics_A',feature,'.csv'))
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
names(features) = c('metric','cc1','go','anagram')
compress95 = read.csv(paste0('Results/metrics_C',feature,'.csv'))
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
names(features) = c('metric','cc1','go','anagram','compress95')
View(features)
features$index = apply(features[2:5],1,sum)
features <- features[with(features,order(-index)),]
feature
metric
features$metric[1:20]
features$metric[1:20][1]
metric = features$metric[1:20][1]
metric
class(metric)
metric
feature
variables
applications
xlab
class(features$metric[1:20][1])
class(as.character(features$metric[1:20]))
as.character(features$metric[1:20])
for(metric in as.character(features$metric[1:20])){
plotMetric(feature, metric, variables, applications, xlab)
}
metric
feature
variables
applications
xlab
metrics = read.csv('metrics.csv')
title = simpleCap(as.character(metrics$desc[metrics$metric==metric]))
metrics$metric==metric
features
source('plotMetrics.R')
metric = "sim_CPI"
variables = c("Not Taken", "Taken", "Bimodal", "2-Level")
applications = c("cc1", "go", "anagram", "compress95")
feature = "_BP"
xlab = "Branch prediction"
plotMetric(feature, metric, variables, applications, xlab)
cc1 = read.csv(paste0('Results/metrics',feature,'.csv'))
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv(paste0('Results/metrics_G',feature,'.csv'))
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
names(features) = c('metric','cc1','go')
anagram = read.csv(paste0('Results/metrics_A',feature,'.csv'))
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
names(features) = c('metric','cc1','go','anagram')
compress95 = read.csv(paste0('Results/metrics_C',feature,'.csv'))
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
names(features) = c('metric','cc1','go','anagram','compress95')
features
cc1 = read.csv(paste0('Results/metrics',feature,'.csv'))
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
cc1 = read.csv(paste0('Results/metrics',feature,'.csv'))
test = cc1[complete.cases(cc1),c(1,6)]
View(test)
metrics
View(metrics)
View(test)
merge(x = metrics, y = test, by = "metric", all.y = TRUE)
rbind(metrics, test)
unique(rbind(metrics, test))
write.csv(unique(rbind(metrics, test)), 'metrics.csv',row.names = F)
metrics = read.csv('metrics.csv')
View(metrics)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsCacheBlockSize.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBS.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheRP.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetricsCacheReplacementPolicy.R')
>>>>>>> fc60321ffdb11883a841c20d0ce9159b7682a199
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
source('C:/and/PhD/Code/PhD/Y1Q3/Architecture/Project01/analisysCacheA.R')
