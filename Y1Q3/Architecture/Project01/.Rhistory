source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisys.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisys.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysDecode.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysIssue.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysIssue.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysDecode.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysBranchPrediction.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBlockSize.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheBlockSize.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheAssociativity.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
dev.off()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCacheReplacementPolicy.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysCommit.R')
require(ggplot2)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
dev.off()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
results
View(results)
match(results$metric, "sim_CPI")
match("sim_CPI",results$metric)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
top <- 10
app_prefix <- '_C'
fea_prefix <- '_F'
if(fea_prefix=='_F'){
xlab <- "Number of fetched instructions"
}else if(fea_prefix=='_D'){
xlab <- "Number of decoded instructions"
}else if(fea_prefix=='_I'){
xlab <- "Number of issued instructions"
}else if(fea_prefix=='_C'){
xlab <- "Number of committed instructions"
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"1.txt"))
start <- match("sim: ** simulation statistics **", data)
data <- data[start:length(data) - 1]
n <- length(data)
empty <- rep(0, n)
results <- data.frame(metric = empty, C1 = empty)
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,1] <- result[1]
results[i,2] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"2.txt"))
data <- data[start:length(data) - 1]
results$C2 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,3] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"4.txt"))
data <- data[start:length(data) - 1]
results$C4 <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,4] <- as.numeric(result[2])
}
data <- readLines(paste0("Results/results",app_prefix,fea_prefix,"8.txt"))
data <- data[start:length(data) - 1]
results$C8 <- empty
results$desc <- empty
for(i in 1:n){
result <- strsplit(strsplit(data[i], "#")[[1]][1], "\\s+")[[1]]
results[i,5] <- as.numeric(result[2])
results[i,6] <- strsplit(data[i], "#")[[1]][2]
}
results[match("sim_CPI",results$metric),2:5]
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFetch.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
metrics = read.csv('metrics.csv')
View(metrics)
metric$desc[metric$metric=='sim_CPI']
metrics$desc[metrics$metric=='sim_CPI']
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
simpleCap(metrics$desc[metrics$metric=='sim_CPI'])
simpleCap("cycles per instruction")
simpleCap(metrics$desc[metrics$metric=='sim_CPI'][1])
class(metrics$desc[metrics$metric=='sim_CPI'])
simpleCap(as.character(metrics$desc[metrics$metric=='sim_CPI'])
)
simpleCap(as.character(metrics$desc[metrics$metric=='sim_CPI']))
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
features = read.csv('Results/metrics_F.csv')
View(features)
features$metric[1:10]
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
View(features)
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),]
go = read.csv('Results/metrics_G_F.csv')
go = cc1[complete.cases(go),]
anagram = read.csv('Results/metrics_A_F.csv')
anagram = cc1[complete.cases(anagram),]
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = cc1[complete.cases(compress95),]
?merge
merge(cc1, go, by = "metric")
View(merge(cc1, go, by = "metric"))
View(cc1)
c(1:5,11)
cc1[,c(1,-1)]
cc1[,c(1,11)]
cc1[,c(1,length(cc1))]
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = cc1[complete.cases(go),c(1,length(cc1))]
features = merge(cc1, go, by = "metric")
View(features)
anagram = read.csv('Results/metrics_A_F.csv')
anagram = cc1[complete.cases(anagram),c(1,length(cc1))]
features = merge(features, anagram, by = "metric")
View(features)
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = cc1[complete.cases(compress95),c(1,length(cc1))]
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
View(features)
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
View(features)
cc1 = read.csv('Results/metrics_F.csv')
cc1 = cc1[complete.cases(cc1),c(1,length(cc1))]
go = read.csv('Results/metrics_G_F.csv')
go = go[complete.cases(go),c(1,length(go))]
features = merge(cc1, go, by = "metric")
names(features) = c('metric','cc1','go')
anagram = read.csv('Results/metrics_A_F.csv')
anagram = anagram[complete.cases(anagram),c(1,length(anagram))]
features = merge(features, anagram, by = "metric")
names(features) = c('metric','cc1','go','anagram')
compress95 = read.csv('Results/metrics_C_F.csv')
compress95 = compress95[complete.cases(compress95),c(1,length(compress95))]
features = merge(features, compress95, by = "metric")
names(features) = c('metric','cc1','go','anagram','compress95')
View(features)
apply(features[2:5],2,sum)
apply(features[2:5],1,sum)
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/analisysFDIC.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
getwd()
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
source('~/Documents/PhD/Code/Y1Q3/Architecture/Project01/plotMetrics2.R')
