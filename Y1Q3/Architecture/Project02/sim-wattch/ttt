sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 73.7882
Branch Predictor Power Consumption: 4.52313  (6.3%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.582%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (3.07%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.34%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (4.98%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.2%)
Total Clock Power: 26.0975  (36.4%)
Int ALU Power: 4.66013  (6.49%)
FP ALU Power: 14.281  (19.9%)
Instruction Cache Power Consumption: 2.21363  (3.08%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.367%)
Data Cache Power Consumption: 5.18303  (7.22%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.26%)
Level 2 Cache Power Consumption: 4.2091 (5.86%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
warning: section `.comment' ignored...
sim: command line: ./sim-outorder -max:inst 1000000 -DVFSTurnOff FALSE ../benchmarks/go.alpha 50 9 ../benchmarks/2stone9.in 2 

sim: simulation started @ Sun May 22 18:27:23 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst             1000000 # maximum number of inst's to execute
-DVFSInterval          100000 # Number of cycles for power monitoring interval
-DVFSTargetPower   6000000.00 # Target power budget controlled at each interval
-DVFSIncrement            0.1 # Increment for scaling of Voltage and Frequency
-DVFSTurnOff            false # Do not execute the DVFS controller
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn                1000001 # total number of instructions committed
sim_num_refs                 278820 # total number of loads and stores committed
sim_num_loads                156673 # total number of loads committed
sim_num_stores          122147.0000 # total number of stores committed
sim_num_branches             176914 # total number of branches committed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate          1000001.0000 # simulation speed (in insts/sec)
sim_total_insn              1136106 # total number of instructions executed
sim_total_refs               314310 # total number of loads and stores executed
sim_total_loads              185773 # total number of loads executed
sim_total_stores        128537.0000 # total number of stores executed
sim_total_branches           202859 # total number of branches executed
sim_cycle                    558256 # total simulation time in cycles
sim_IPC                      1.7913 # instructions per cycle
sim_CPI                      0.5583 # cycles per instruction
sim_exec_BW                  2.0351 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.6525 # instruction per branch
IFQ_count                   1733510 # cumulative IFQ occupancy
IFQ_fcount                   372855 # cumulative IFQ full count
ifq_occupancy                3.1052 # avg IFQ occupancy (insn's)
ifq_rate                     2.0351 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5258 # avg IFQ occupant latency (cycle's)
ifq_full                     0.6679 # fraction of time (cycle's) IFQ was full
RUU_count                   6839230 # cumulative RUU occupancy
RUU_fcount                   278498 # cumulative RUU full count
ruu_occupancy               12.2511 # avg RUU occupancy (insn's)
ruu_rate                     2.0351 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  6.0199 # avg RUU occupant latency (cycle's)
ruu_full                     0.4989 # fraction of time (cycle's) RUU was full
LSQ_count                   1898197 # cumulative LSQ occupancy
LSQ_fcount                    27549 # cumulative LSQ full count
lsq_occupancy                3.4002 # avg LSQ occupancy (insn's)
lsq_rate                     2.0351 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.6708 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0493 # fraction of time (cycle's) LSQ was full
sim_slip                    9472043 # total number of slip cycles
avg_sim_slip                 9.4720 # the average slip between issue and retirement
bpred_bimod.lookups          212281 # total number of bpred lookups
bpred_bimod.updates          176912 # total number of updates
bpred_bimod.addr_hits        159634 # total number of address-predicted hits
bpred_bimod.dir_hits         160476 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses            16436 # total number of misses
bpred_bimod.jr_hits            8389 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen            9655 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP         5086 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP         6302 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9023 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9071 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.8689 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.8070 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes         3903 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops         3782 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP         3353 # total number of RAS predictions used
bpred_bimod.ras_hits.PP         3303 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9851 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses                1199445 # total number of accesses
il1.hits                    1198202 # total number of hits
il1.misses                     1243 # total number of misses
il1.replacements                761 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0010 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0006 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                 270775 # total number of accesses
dl1.hits                     256681 # total number of hits
dl1.misses                    14094 # total number of misses
dl1.replacements              13582 # total number of replacements
dl1.writebacks                10785 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0521 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0502 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0398 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                  26122 # total number of accesses
ul2.hits                      19744 # total number of hits
ul2.misses                     6378 # total number of misses
ul2.replacements               2321 # total number of replacements
ul2.writebacks                 1809 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.2442 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0889 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0693 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses               1199445 # total number of accesses
itlb.hits                   1199404 # total number of hits
itlb.misses                      41 # total number of misses
itlb.replacements                 1 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses                286518 # total number of accesses
dtlb.hits                    286377 # total number of hits
dtlb.misses                     141 # total number of misses
dtlb.replacements                26 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0005 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0001 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power            233331.7408 # total power usage of rename unit
bpred_power            2525062.4493 # total power usage of bpred unit
window_power           1230574.5414 # total power usage of instruction window
lsq_power               537701.0071 # total power usage of load/store queue
regfile_power          1994353.9876 # total power usage of arch. regfile
icache_power           1382767.5858 # total power usage of icache
dcache_power           3396935.4358 # total power usage of dcache
dcache2_power          2349752.7864 # total power usage of dcache2
alu_power              10574024.8151 # total power usage of alu
falu_power             7972479.0274 # total power usage of falu
resultbus_power        1282617.1019 # total power usage of resultbus
clock_power            14569070.6787 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0975 # avg power usage of clock
fetch_stage_power      3907830.0352 # total power usage of fetch stage
dispatch_stage_power    233331.7408 # total power usage of dispatch stage
issue_stage_power      19371605.6877 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             34.7002 # average power of issue unit per cycle
total_power            40076192.1300 # total power per cycle
avg_total_power_cycle       71.7882 # average total power per cycle
avg_total_power_cycle_nofp_nod2      53.2981 # average total power per cycle
avg_total_power_insn        35.2750 # average total power per insn
avg_total_power_insn_nofp_nod2      26.1894 # average total power per insn
rename_power_cc1        170943.7044 # total power usage of rename unit_cc1
bpred_power_cc1         727486.0802 # total power usage of bpred unit_cc1
window_power_cc1        966396.2817 # total power usage of instruction window_cc1
lsq_power_cc1           113650.0451 # total power usage of lsq_cc1
regfile_power_cc1      1341886.8516 # total power usage of arch. regfile_cc1
icache_power_cc1       1057099.2864 # total power usage of icache_cc1
dcache_power_cc1       1227222.1517 # total power usage of dcache_cc1
dcache2_power_cc1        63946.6825 # total power usage of dcache2_cc1
alu_power_cc1          1905138.5984 # total power usage of alu_cc1
resultbus_power_cc1     801590.9016 # total power usage of resultbus_cc1
clock_power_cc1        5112149.0096 # total power usage of clock_cc1
avg_rename_power_cc1         0.3062 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          1.3031 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.7311 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.2036 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.4037 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.8936 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.1983 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1145 # avg power usage of dcache2_cc1
avg_alu_power_cc1            3.4127 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.4359 # avg power usage of resultbus_cc1
avg_clock_power_cc1          9.1574 # avg power usage of clock_cc1
fetch_stage_power_cc1  1784585.3665 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1  170943.7044 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  5077944.6610 # total power usage of issue stage_cc1
avg_fetch_power_cc1          3.1967 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3062 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          9.0961 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  13487509.5932 # total power per cycle_cc1
avg_total_power_cycle_cc1      24.1601 # average total power per cycle_cc1
avg_total_power_insn_cc1      11.8717 # average total power per insn_cc1
rename_power_cc2        118713.2743 # total power usage of rename unit_cc2
bpred_power_cc2         400097.6685 # total power usage of bpred unit_cc2
window_power_cc2        803756.7704 # total power usage of instruction window_cc2
lsq_power_cc2            72038.6203 # total power usage of lsq_cc2
regfile_power_cc2       390957.2234 # total power usage of arch. regfile_cc2
icache_power_cc2       1057099.2864 # total power usage of icache_cc2
dcache_power_cc2        823820.2479 # total power usage of dcache_cc2
dcache2_power_cc2        54974.9956 # total power usage of dcache2_cc2
alu_power_cc2          1238089.1409 # total power usage of alu_cc2
resultbus_power_cc2     494009.4237 # total power usage of resultbus_cc2
clock_power_cc2        3327216.0316 # total power usage of clock_cc2
avg_rename_power_cc2         0.2127 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.7167 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.4398 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1290 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.7003 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.8936 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.4757 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0985 # avg power usage of dcache2_cc2
avg_alu_power_cc2            2.2178 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.8849 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.9600 # avg power usage of clock_cc2
fetch_stage_power_cc2  1457196.9548 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2  118713.2743 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  3486689.1989 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.6103 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2127 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          6.2457 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  8780772.6830 # total power per cycle_cc2
avg_total_power_cycle_cc2      15.7289 # average total power per cycle_cc2
avg_total_power_insn_cc2       7.7288 # average total power per insn_cc2
rename_power_cc3        124952.0780 # total power usage of rename unit_cc3
bpred_power_cc3         579872.0410 # total power usage of bpred unit_cc3
window_power_cc3        825688.7187 # total power usage of instruction window_cc3
lsq_power_cc3           114190.4192 # total power usage of lsq_cc3
regfile_power_cc3       436212.2282 # total power usage of arch. regfile_cc3
icache_power_cc3       1089666.1163 # total power usage of icache_cc3
dcache_power_cc3       1042287.8548 # total power usage of dcache_cc3
dcache2_power_cc3       283832.7749 # total power usage of dcache2_cc3
alu_power_cc3          2104977.7626 # total power usage of alu_cc3
resultbus_power_cc3     526387.5469 # total power usage of resultbus_cc3
clock_power_cc3        4252097.2000 # total power usage of clock_cc3
avg_rename_power_cc3         0.2238 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          1.0387 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.4791 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2045 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.7814 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.9519 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.8670 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.5084 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.7706 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.9429 # avg power usage of resultbus_cc3
avg_clock_power_cc3          7.6168 # avg power usage of clock_cc3
fetch_stage_power_cc3  1669538.1573 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3  124952.0780 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  4897365.0772 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.9906 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2238 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          8.7726 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  11380164.7406 # total power per cycle_cc3
avg_total_power_cycle_cc3      20.3852 # average total power per cycle_cc3
avg_total_power_insn_cc3      10.0168 # average total power per insn_cc3
avg_power                   60.2742 # Sum of average powers (cc1+cc2+cc3)
tot_power              33648447.0169 # Sum of total powers (cc1+cc2+cc3)
total_rename_access         1136106 # total number accesses of rename unit
total_bpred_access           176912 # total number accesses of bpred unit
total_window_access         3844100 # total number accesses of instruction window
total_lsq_access             304988 # total number accesses of load/store queue
total_regfile_access        1504242 # total number accesses of arch. regfile
total_icache_access         1199906 # total number accesses of icache
total_dcache_access          270775 # total number accesses of dcache
total_dcache2_access          26122 # total number accesses of dcache2
total_alu_access            1056925 # total number accesses of alu
total_resultbus_access      1029050 # total number accesses of resultbus
avg_rename_access            2.0351 # avg number accesses of rename unit
avg_bpred_access             0.3169 # avg number accesses of bpred unit
avg_window_access            6.8859 # avg number accesses of instruction window
avg_lsq_access               0.5463 # avg number accesses of lsq
avg_regfile_access           2.6945 # avg number accesses of arch. regfile
avg_icache_access            2.1494 # avg number accesses of icache
avg_dcache_access            0.4850 # avg number accesses of dcache
avg_dcache2_access           0.0468 # avg number accesses of dcache2
avg_alu_access               1.8933 # avg number accesses of alu
avg_resultbus_access         1.8433 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                16 # max number accesses of instruction window
max_lsq_access                    5 # max number accesses of load/store queue
max_regfile_access               11 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                6 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              6 # max number accesses of resultbus
max_cycle_power_cc1         50.7098 # maximum cycle power usage of cc1
max_cycle_power_cc2         32.4809 # maximum cycle power usage of cc2
max_cycle_power_cc3         35.5256 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 376832 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 612032 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120007bb0 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  117 # total number of pages allocated
mem.page_mem                   936k # total size of memory pages allocated
mem.ptab_misses                2092 # total first level page table misses
mem.ptab_accesses           5946024 # total page table accesses
mem.ptab_miss_rate           0.0004 # first level page table miss rate


Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 1
  Block Size (bytes): 32

Access Time: 6.07496e-09
Cycle Time:  7.99836e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.07496
 tag side (ns): 6.05737
 decode_data (ns): 2.92313
 wordline_data (ns): 1.32956
 bitline_data (ns): 0.452976
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.84499
 wordline_tag (ns): 0.825016
 bitline_tag (ns): 0.252886
 sense_amp_tag (ns): 0.26
 compare (ns): 2.30022
 valid signal driver (ns): 0.574251
 data output driver (ns): 0.789293
 total data path (with output driver) (ns): 5.28567
 total tag path is dm (ns): 6.05737
 precharge time (ns): 1.92339

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 4
  Block Size (bytes): 32

Access Time: 9.14093e-09
Cycle Time:  1.11718e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.98848
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 1.27791
 bitline_tag (ns): -0.0315811
 sense_amp_tag (ns): 0.26
 compare (ns): 2.29478
 mux driver (ns): 2.37376
 sel inverter (ns): 0.345094
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.98848
 precharge time (ns): 2.03083

Cache Parameters:
  Size in bytes: 262144
  Number of sets: 1024
  Associativity: 4
  Block Size (bytes): 64

Access Time: 1.44948e-08
Cycle Time:  1.76863e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 11.3269
 tag side (ns): 12.2049
 decode_data (ns): 4.99158
 wordline_data (ns): 2.59771
 bitline_data (ns): 0.867749
 sense_amp_data (ns): 0.58
 decode_tag (ns): 4.52586
 wordline_tag (ns): 1.24192
 bitline_tag (ns): 0.46158
 sense_amp_tag (ns): 0.26
 compare (ns): 2.17054
 mux driver (ns): 3.21212
 sel inverter (ns): 0.332908
 data output driver (ns): 2.28987
 total data path (with output driver) (ns): 9.03704
 total tag path is set assoc (ns): 12.2049
 precharge time (ns): 3.19154


!!!!!!!! Powerfactor == 3750000000.000000

