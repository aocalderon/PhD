source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/Normalize.R')
class
data
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/ErrorInjector.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/spline.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/spline.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/Normalize.R')
train
x
normalize(x)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
zoo <- read.csv('zoo.csv', header = F)
n <- nrow(zoo)
m <- ncol(zoo)
x <- zoo[,2:(m-1)]
y <- zoo[,m]
x
y
set.seed(456)
train <- sample(1:n,n*0.7)
test <- (1:n)[-train]
train
test
normalize(x)
x
x <- zoo[,2:(m-1)]
x
x <- apply(x,2,normalize)
x
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
zoo <- read.csv('zoo.csv', header = F)
n <- nrow(zoo)
m <- ncol(zoo)
x <- zoo[,2:(m-1)]
x
x <- apply(x,2,normalize)
x
y <- zoo[,m]
y
set.seed(456)
train <- sample(1:n,n*0.7)
test <- (1:n)[-train]
kdist <- knn.dist(normilize(x))
kdist <- knn.dist(x)
kdist
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
preds_error
p
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
p
preds
k
kdist
train
test
y
k
preds <- knn.predict(train,test,y,kdist,k=k)
preds
?knn.predict
n <- nrow(iris)
x <- iris[,1:4]
x <- apply(x,2,normalize)
y <- iris[,5]
set.seed(456)
y
class(y)
y
zoo <- read.csv('zoo.csv', header = F)
n <- nrow(zoo)
m <- ncol(zoo)
x <- zoo[,2:(m-1)]
x <- apply(x,2,normalize)
y <- zoo[,m]
class(y)
as.fastor(y)
as.factor(y)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
y
preds
test
y[test]
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
p
preds_error
y[test]
y[train]
table(y[test], preds_error)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/Normalize.R')
getAccuracy(y[test], preds_error)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/Normalize.R')
getAccuracy(y[test], preds_error)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
y
preds_error
y[test]
y[test][1]
y[test][1] == preds_error[1]
y[test][2] == preds_error[2]
getAccuracy(y[test], preds_error)
as
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation2.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
seeds <- read.csv('seeds.tsv', header = F)
seeds <- read.csv('seeds.tsv', header = F, sep = '\t')
View(seeds)
seeds <- read.csv('seeds.tsv', header = F, sep = '\t')
n <- nrow(seeds)
m <- ncol(seeds)
x <- seeds[,1:(m-1)]
x
x <- apply(x,2,normalize)
x
y <- seeds[,m]
y
set.seed(456)
train <- sample(1:n,n*0.7)
test <- (1:n)[-train]
train
test
kdist <- knn.dist(x)
kdist
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_seeds.R')
wine <- read.csv('wine.csv', header = F)
n <- nrow(wine)
m <- ncol(wine)
x <- wine[,2:m]
x
x <- apply(x,2,normalize)
x
y <- wine[,1]
y
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
text(0.97,accuracy_orig,paste("acc=",accuracy_orig))
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
text(0.97,accuracy_orig,paste("acc=",round(accuracy_orig,2)), cex=0.5)
text(0.97,accuracy_orig,paste("acc=",round(accuracy_orig,2)), cex=0.6)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
text(0.97,accuracy_orig-0.05,paste("acc=",round(accuracy_orig,2)),cex=0.6,col="blue")
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
text(0.97,accuracy_orig-0.06,paste("acc=",round(accuracy_orig,2)),cex=0.6,col="blue")
text(0.97,accuracy_orig-0.055,paste("acc=",round(accuracy_orig,2)),cex=0.6,col="blue")
layout(mat = matrix(c(1,1,2,2,0,3,3,0),nrow = 2, byrow = T))
hist(mtcars$wt)
hist(mtcars$mpg)
hist(mtcars$disp)
plotSpline(data, k)
abline(h = accuracy_orig, col='blue', cex=0.1, lty=3)
text(0.97,accuracy_orig-0.055,paste("acc=",round(accuracy_orig,2)),cex=0.6,col="blue")
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
layout(mat = matrix(c(1,1,2,2,3,3,4,4,0,5,5,0),nrow = 2, byrow = T))
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
layout(mat = matrix(c(1,1,2,2,3,3,4,4,0,5,5,0),nrow = 3, byrow = T))
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
par(mfrow=c(1,1))
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_iris.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
cancer <- read.csv('cancer.csv', header = F)
n <- nrow(cancer)
m <- ncol(cancer)
cancer
View(cancer)
x <- cancer[,3:m]
x
x <- apply(x,2,normalize)
x
y <- cancer[,2]
y
set.seed(456)
train <- sample(1:n,n*0.7)
test <- (1:n)[-train]
train
test
kdist <- knn.dist(x)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_cancer.R')
text(0.97,accuracy_orig-0.01,paste("acc=",round(accuracy_orig,2)),cex=0.6,col="blue")
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_cancer.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
lines(data$p,lmfit$fit,col="red",lwd=2,lty=3)
plot(data,main=paste("k = ", k),xlab="p",ylab="Accuracy",pch=21,bg=1,cex=0.4)
lines(data$p,lmfit$fit,col="red",lwd=1,lty=3)
K = 100   # Number of knots
knots = (1:K)/(K+1)
X = bs(data$p,knots=knots,intercept=TRUE)
## Fit the simple linear regression model
lambda = 10                           # Smoothing parameter
lmfit = fit.p.spline(data$Accuracy,X,lambda=lambda)
## Overlay the fitted line on the plot of the raw data
lines(data$p,lmfit$fit,col="red",lwd=1,lty=3)
lines(data$p,lmfit$fit,col="red",lwd=1,lty=2)
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/spline.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_iris.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_seeds.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_wine.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_cancer.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M1/ErrorInjector.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/spline.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/simulation_zoo.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/runSimulations.R')
source('~/Documents/PhD/Code/Y1Q2/Compilers/Project/M2/runSimulations.R')
require(knnflex)
n <- nrow(iris)
x <- iris[,1:4]
x <- apply(x,2,normalize)
y <- iris[,5]
set.seed(456)
train <- sample(1:n,n*0.7)
test <- (1:n)[-train]
kdist <- knn.dist(x)
kdist
k <- 1
p <- 0.1
kdist_error <- injectError(kdist, p)
kdist_error[1,]
summary(kdist_error)
min(kdist_error)
min(kdist)
max(kdist)
max(kdist_error)
mn <- .Machine$double.xmin
mx <- .Machine$double.xmax
mn
mx
mx - mn
mn > 0
-mx
-mx < 0
-mx > 0
source('~/Documents/PhD/Compilers/M3/ErrorInjector.R')
source('~/Documents/PhD/Code/PhD/Y1Q2/Compilers/Project/M2/simulation_iris.R')
kdist_error <- injectError(kdist, p)
min(kdist)
min(kdist_error)
random <- runif(1, -mx, mx)
random <- runif(1, -mx, mx)
random <- runif(1, -mx, mx)
random <- runif(1, -mx, mx)
random <- runif(1, -mx, mx)
kdist_error
runif(1,-10, 10)
runif(1,-10, 10)
runif(1,-10, 10)
runif(1,-mx, 10)
runif(1,-mx, 10)
runif(1,-mx, 10)
runif(1,-mx, 10)
runif(1,-mx, 10)
runif(1,-mx, 10)
runif(1,-mx, mx)
runif(1,-mx, mx)
runif(1,-mx, 1000)
runif(1,-mx, 1000)
runif(1,-1000, 1000)
runif(1,-1000, 1000)
runif(1,-1000, 1000)
runif(1,-1000, 1000)
source('~/Documents/PhD/Compilers/M3/ErrorInjector.R')
source('~/Documents/PhD/Compilers/M3/simulation_zoo.R')
as
accuracy_orig
