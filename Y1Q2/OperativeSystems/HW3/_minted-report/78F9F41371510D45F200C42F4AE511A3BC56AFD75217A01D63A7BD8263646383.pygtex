\begin{Verbatim}[commandchars=\\\{\}]
\PYGdefault{c+cp}{\PYGdefaultZsh{}include \PYGdefaultZdq{}types.h\PYGdefaultZdq{}}
\PYGdefault{c+cp}{\PYGdefaultZsh{}include \PYGdefaultZdq{}user.h\PYGdefaultZdq{}}
\PYGdefault{c+cp}{\PYGdefaultZsh{}include \PYGdefaultZdq{}thread.h\PYGdefaultZdq{}}

\PYGdefault{k+kt}{int} \PYGdefault{n}{x} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{;}
\PYGdefault{k+kt}{int} \PYGdefault{n}{nthreads} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{4}\PYGdefault{p}{;}
\PYGdefault{k}{struct} \PYGdefault{n}{lock} \PYGdefault{n}{our\PYGdefaultZus{}lock}\PYGdefault{p}{;}

\PYGdefault{k+kt}{void} \PYGdefault{o}{*}\PYGdefault{n+nf}{my\PYGdefaultZus{}function}\PYGdefault{p}{(}\PYGdefault{k+kt}{void} \PYGdefault{o}{*}\PYGdefault{n}{arg}\PYGdefault{p}{)\PYGdefaultZob{}}
	\PYGdefault{k+kt}{int} \PYGdefault{n}{i}\PYGdefault{p}{;}
	\PYGdefault{k+kt}{int} \PYGdefault{n}{j} \PYGdefault{o}{=} \PYGdefault{p}{(}\PYGdefault{k+kt}{int}\PYGdefault{p}{)}\PYGdefault{n}{arg}\PYGdefault{p}{;}
	\PYGdefault{k}{for}\PYGdefault{p}{(}\PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{nthreads}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)\PYGdefaultZob{}}
		\PYGdefault{n}{acquire\PYGdefaultZus{}lock}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{our\PYGdefaultZus{}lock}\PYGdefault{p}{);}
			\PYGdefault{n}{printf}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{1}\PYGdefault{p}{,}\PYGdefault{l+s}{\PYGdefaultZdq{}I am thread \PYGdefaultZpc{}d, Let\PYGdefaultZsq{}s see x = \PYGdefaultZpc{}d.}\PYGdefault{l+s+se}{\PYGdefaultZbs{}n}\PYGdefault{l+s}{\PYGdefaultZdq{}}\PYGdefault{p}{,} \PYGdefault{n}{j}\PYGdefault{p}{,} \PYGdefault{n}{x}\PYGdefault{p}{);}
			\PYGdefault{n}{x} \PYGdefault{o}{=} \PYGdefault{n}{x} \PYGdefault{o}{+} \PYGdefault{l+m+mi}{1}\PYGdefault{p}{;}
		\PYGdefault{n}{release\PYGdefaultZus{}lock}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{our\PYGdefaultZus{}lock}\PYGdefault{p}{);}
		\PYGdefault{n}{sleep}\PYGdefault{p}{(}\PYGdefault{l+m+mi}{10}\PYGdefault{p}{);}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{k}{return} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;}
\PYGdefault{p}{\PYGdefaultZcb{}}

\PYGdefault{k+kt}{int} \PYGdefault{n+nf}{main}\PYGdefault{p}{(}\PYGdefault{k+kt}{int} \PYGdefault{n}{argc}\PYGdefault{p}{,} \PYGdefault{k+kt}{char} \PYGdefault{o}{*}\PYGdefault{n}{argv}\PYGdefault{p}{[])\PYGdefaultZob{}}
	\PYGdefault{n}{init\PYGdefaultZus{}lock}\PYGdefault{p}{(}\PYGdefault{o}{\PYGdefaultZam{}}\PYGdefault{n}{our\PYGdefaultZus{}lock}\PYGdefault{p}{);}

	\PYGdefault{k+kt}{int} \PYGdefault{n}{i}\PYGdefault{p}{;}
	\PYGdefault{k}{for}\PYGdefault{p}{(}\PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{nthreads}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)\PYGdefaultZob{}}
		\PYGdefault{n}{thread\PYGdefaultZus{}create2}\PYGdefault{p}{(}\PYGdefault{o}{*}\PYGdefault{n}{my\PYGdefaultZus{}function}\PYGdefault{p}{,} \PYGdefault{p}{(}\PYGdefault{k+kt}{int}\PYGdefault{o}{*}\PYGdefault{p}{)}\PYGdefault{n}{i}\PYGdefault{p}{);}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	\PYGdefault{k}{for}\PYGdefault{p}{(}\PYGdefault{n}{i} \PYGdefault{o}{=} \PYGdefault{l+m+mi}{0}\PYGdefault{p}{;} \PYGdefault{n}{i} \PYGdefault{o}{\PYGdefaultZlt{}} \PYGdefault{n}{nthreads}\PYGdefault{p}{;} \PYGdefault{n}{i}\PYGdefault{o}{++}\PYGdefault{p}{)\PYGdefaultZob{}}
		\PYGdefault{n}{wait}\PYGdefault{p}{();}
	\PYGdefault{p}{\PYGdefaultZcb{}}
	
	\PYGdefault{n}{exit}\PYGdefault{p}{();}
\PYGdefault{p}{\PYGdefaultZcb{}}
\end{Verbatim}
